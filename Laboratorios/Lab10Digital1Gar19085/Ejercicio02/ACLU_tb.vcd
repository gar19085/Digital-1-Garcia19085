$date
	Sat Nov 07 22:07:19 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! ZERO $end
$var wire 4 " OUT [3:0] $end
$var wire 1 # C $end
$var reg 1 $ AC1 $end
$var reg 1 % AC2 $end
$var reg 1 & CLK $end
$var reg 1 ' ENABLE $end
$var reg 4 ( IN [3:0] $end
$var reg 1 ) RST $end
$var reg 3 * SEL [2:0] $end
$scope module T1 $end
$var wire 1 $ AC1 $end
$var wire 1 % AC2 $end
$var wire 1 & CLK $end
$var wire 1 ' ENABLE $end
$var wire 4 + IN [3:0] $end
$var wire 1 ) RST $end
$var wire 3 , SEL [2:0] $end
$var wire 1 ! ZERO $end
$var wire 4 - OUT [3:0] $end
$var wire 1 # C $end
$var wire 4 . BO [3:0] $end
$var wire 4 / ALO [3:0] $end
$var wire 4 0 ACO [3:0] $end
$scope module B1 $end
$var wire 1 $ AC $end
$var wire 4 1 DPS [3:0] $end
$var reg 4 2 OUT [3:0] $end
$upscope $end
$scope module B2 $end
$var wire 1 & CLK $end
$var wire 1 ' ENABLE $end
$var wire 1 ) RST $end
$var wire 4 3 Q [3:0] $end
$var wire 4 4 D [3:0] $end
$scope module F4F1 $end
$var wire 1 & CLK $end
$var wire 1 5 D $end
$var wire 1 ' ENABLE $end
$var wire 1 ) RST $end
$var reg 1 6 Q $end
$upscope $end
$scope module F4F2 $end
$var wire 1 & CLK $end
$var wire 1 7 D $end
$var wire 1 ' ENABLE $end
$var wire 1 ) RST $end
$var reg 1 8 Q $end
$upscope $end
$scope module F4F3 $end
$var wire 1 & CLK $end
$var wire 1 9 D $end
$var wire 1 ' ENABLE $end
$var wire 1 ) RST $end
$var reg 1 : Q $end
$upscope $end
$scope module F4F4 $end
$var wire 1 & CLK $end
$var wire 1 ; D $end
$var wire 1 ' ENABLE $end
$var wire 1 ) RST $end
$var reg 1 < Q $end
$upscope $end
$upscope $end
$scope module B3 $end
$var wire 4 = A [3:0] $end
$var wire 4 > B [3:0] $end
$var wire 3 ? SEL [2:0] $end
$var reg 1 # C $end
$var reg 5 @ IR [4:0] $end
$var reg 4 A OUT [3:0] $end
$var reg 1 ! ZERO $end
$upscope $end
$scope module B4 $end
$var wire 1 % AC $end
$var wire 4 B DPS [3:0] $end
$var reg 4 C OUT [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bz C
bz B
bz A
b0zzzz @
b0 ?
bx >
bz =
x<
z;
x:
z9
x8
z7
x6
z5
bz 4
bx 3
bz 2
b0 1
bx 0
bz /
bz .
bz -
b0 ,
b0 +
b0 *
0)
b0 (
0'
0&
0%
0$
0#
bz "
0!
$end
#1
b0zzzz @
06
08
0:
b0 0
b0 3
b0 >
0<
1&
1)
#2
0&
0)
#3
1&
b10 (
b10 +
b10 1
#4
0&
0;
19
07
05
b10 /
b10 4
b10 A
b10 B
b10 @
b10 .
b10 2
b10 =
1$
#5
b10 @
b10 0
b10 3
b10 >
1:
1'
1&
#6
0&
b10 "
b10 -
b10 C
1%
#7
1&
#8
0&
#9
1&
#10
0&
#11
1&
#12
0&
b10 @
b10 *
b10 ,
b10 ?
#13
1&
0'
#14
0&
#15
1&
#16
0&
#17
1&
#18
0&
1;
09
17
15
b1101 "
b1101 -
b1101 C
b1101 /
b1101 4
b1101 A
b1101 B
b11101 @
b100 *
b100 ,
b100 ?
#19
19
b1111 "
b1111 -
b1111 C
b1111 /
b1111 4
b1111 A
b1111 B
b11111 @
16
18
0:
b1101 0
b1101 3
b1101 >
1<
1&
1'
#20
0&
#21
09
b1101 "
b1101 -
b1101 C
b1101 /
b1101 4
b1101 A
b1101 B
b11101 @
b1111 0
b1111 3
b1111 >
1:
1&
#22
0&
#23
19
b1111 "
b1111 -
b1111 C
b1111 /
b1111 4
b1111 A
b1111 B
b11111 @
b1101 0
b1101 3
b1101 >
0:
1&
#24
0&
09
05
b101 "
b101 -
b101 C
1#
b101 /
b101 4
b101 A
b101 B
b10101 @
b1 *
b1 ,
b1 ?
#25
15
b1101 "
b1101 -
b1101 C
b1101 /
b1101 4
b1101 A
b1101 B
b11101 @
b101 0
b101 3
b101 >
06
1&
#26
0&
#27
05
b101 "
b101 -
b101 C
b101 /
b101 4
b101 A
b101 B
b10101 @
b1101 0
b1101 3
b1101 >
16
1&
#28
0&
#29
07
b1111 0
b1111 3
b1111 >
1:
1&
09
05
b1 "
b1 -
b1 C
1#
b1 /
b1 4
b1 A
b1 B
b10001 @
b11 *
b11 ,
b11 ?
#30
0&
#31
19
b11 "
b11 -
b11 C
0#
b11 /
b11 4
b11 A
b11 B
b11 @
06
08
b1 0
b1 3
b1 >
0:
1&
#32
0&
#33
09
17
b101 "
b101 -
b101 C
b101 /
b101 4
b101 A
b101 B
b101 @
b11 0
b11 3
b11 >
1:
1&
#34
0&
#35
19
b111 "
b111 -
b111 C
b111 /
b111 4
b111 A
b111 B
b111 @
18
b101 0
b101 3
b101 >
0:
1&
#36
0&
#37
09
07
15
b1001 "
b1001 -
b1001 C
b1001 /
b1001 4
b1001 A
b1001 B
b1001 @
b111 0
b111 3
b111 >
1:
1&
#38
0&
#39
19
b1011 "
b1011 -
b1011 C
b1011 /
b1011 4
b1011 A
b1011 B
b1011 @
16
08
b1001 0
b1001 3
b1001 >
0:
1&
#40
0&
